Terminals which are not used

   lex_KW_INT
   lex_KW_CHAR
   lex_KW_IF
   lex_KW_ELSE
   lex_KW_WHILE
   lex_KW_RETURN
   lex_AND
   lex_EQEQ
   lex_SEMICOLON
   lex_LBRACE
   lex_RBRACE
   lex_LBRACK
   lex_RBRACK


Grammar

    0 $accept: program $end

    1 program: expression

    2 exp_variable: lex_ID

    3 expression4: lex_INT
    4            | lex_CHAR
    5            | exp_variable
    6            | lex_LPAREN expression lex_RPAREN
    7            | exp_function

    8 expression3: expression4
    9            | expression3 lex_STAR expression4
   10            | expression3 lex_SLASH expression4
   11            | expression3 lex_PERCENT expression4

   12 expression2: expression3
   13            | lex_PLUS expression3
   14            | lex_MINUS expression3
   15            | expression2 lex_PLUS expression3
   16            | expression2 lex_MINUS expression3

   17 expression: expression2
   18           | expression lex_LT expression2
   19           | expression lex_GT expression2
   20           | expression lex_LE expression2
   21           | expression lex_GE expression2
   22           | expression lex_EQ expression2
   23           | expression lex_NE expression2

   24 exp_function: lex_ID lex_LPAREN explist lex_RPAREN

   25 explist: /* empty */
   26        | expression
   27        | explist lex_COMMA expression


Terminals, with rules where they appear

$end (0) 0
error (256)
lex_KW_INT (258)
lex_KW_CHAR (259)
lex_KW_IF (260)
lex_KW_ELSE (261)
lex_KW_WHILE (262)
lex_KW_RETURN (263)
lex_PLUS (264) 13 15
lex_MINUS (265) 14 16
lex_STAR (266) 9
lex_SLASH (267) 10
lex_PERCENT (268) 11
lex_AND (269)
lex_EQ (270) 22
lex_EQEQ (271)
lex_NE (272) 23
lex_LT (273) 18
lex_GT (274) 19
lex_LE (275) 20
lex_GE (276) 21
lex_COMMA (277) 27
lex_SEMICOLON (278)
lex_LPAREN (279) 6 24
lex_RPAREN (280) 6 24
lex_LBRACE (281)
lex_RBRACE (282)
lex_LBRACK (283)
lex_RBRACK (284)
lex_INT (285) 3
lex_CHAR (286) 4
lex_ID (287) 2 24


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
exp_variable (35)
    on left: 2, on right: 5
expression4 (36)
    on left: 3 4 5 6 7, on right: 8 9 10 11
expression3 (37)
    on left: 8 9 10 11, on right: 9 10 11 12 13 14 15 16
expression2 (38)
    on left: 12 13 14 15 16, on right: 15 16 17 18 19 20 21 22 23
expression (39)
    on left: 17 18 19 20 21 22 23, on right: 1 6 18 19 20 21 22 23
    26 27
exp_function (40)
    on left: 24, on right: 7
explist (41)
    on left: 25 26 27, on right: 24 27


state 0

    0 $accept: . program $end

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    program       go to state 7
    exp_variable  go to state 8
    expression4   go to state 9
    expression3   go to state 10
    expression2   go to state 11
    expression    go to state 12
    exp_function  go to state 13


state 1

   13 expression2: lex_PLUS . expression3

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    exp_variable  go to state 8
    expression4   go to state 9
    expression3   go to state 14
    exp_function  go to state 13


state 2

   14 expression2: lex_MINUS . expression3

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    exp_variable  go to state 8
    expression4   go to state 9
    expression3   go to state 15
    exp_function  go to state 13


state 3

    6 expression4: lex_LPAREN . expression lex_RPAREN

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    exp_variable  go to state 8
    expression4   go to state 9
    expression3   go to state 10
    expression2   go to state 11
    expression    go to state 16
    exp_function  go to state 13


state 4

    3 expression4: lex_INT .

    $default  reduce using rule 3 (expression4)


state 5

    4 expression4: lex_CHAR .

    $default  reduce using rule 4 (expression4)


state 6

    2 exp_variable: lex_ID .
   24 exp_function: lex_ID . lex_LPAREN explist lex_RPAREN

    lex_LPAREN  shift, and go to state 17

    $default  reduce using rule 2 (exp_variable)


state 7

    0 $accept: program . $end

    $end  shift, and go to state 18


state 8

    5 expression4: exp_variable .

    $default  reduce using rule 5 (expression4)


state 9

    8 expression3: expression4 .

    $default  reduce using rule 8 (expression3)


state 10

    9 expression3: expression3 . lex_STAR expression4
   10            | expression3 . lex_SLASH expression4
   11            | expression3 . lex_PERCENT expression4
   12 expression2: expression3 .

    lex_STAR     shift, and go to state 19
    lex_SLASH    shift, and go to state 20
    lex_PERCENT  shift, and go to state 21

    $default  reduce using rule 12 (expression2)


state 11

   15 expression2: expression2 . lex_PLUS expression3
   16            | expression2 . lex_MINUS expression3
   17 expression: expression2 .

    lex_PLUS   shift, and go to state 22
    lex_MINUS  shift, and go to state 23

    $default  reduce using rule 17 (expression)


state 12

    1 program: expression .
   18 expression: expression . lex_LT expression2
   19           | expression . lex_GT expression2
   20           | expression . lex_LE expression2
   21           | expression . lex_GE expression2
   22           | expression . lex_EQ expression2
   23           | expression . lex_NE expression2

    lex_EQ  shift, and go to state 24
    lex_NE  shift, and go to state 25
    lex_LT  shift, and go to state 26
    lex_GT  shift, and go to state 27
    lex_LE  shift, and go to state 28
    lex_GE  shift, and go to state 29

    $default  reduce using rule 1 (program)


state 13

    7 expression4: exp_function .

    $default  reduce using rule 7 (expression4)


state 14

    9 expression3: expression3 . lex_STAR expression4
   10            | expression3 . lex_SLASH expression4
   11            | expression3 . lex_PERCENT expression4
   13 expression2: lex_PLUS expression3 .

    lex_STAR     shift, and go to state 19
    lex_SLASH    shift, and go to state 20
    lex_PERCENT  shift, and go to state 21

    $default  reduce using rule 13 (expression2)


state 15

    9 expression3: expression3 . lex_STAR expression4
   10            | expression3 . lex_SLASH expression4
   11            | expression3 . lex_PERCENT expression4
   14 expression2: lex_MINUS expression3 .

    lex_STAR     shift, and go to state 19
    lex_SLASH    shift, and go to state 20
    lex_PERCENT  shift, and go to state 21

    $default  reduce using rule 14 (expression2)


state 16

    6 expression4: lex_LPAREN expression . lex_RPAREN
   18 expression: expression . lex_LT expression2
   19           | expression . lex_GT expression2
   20           | expression . lex_LE expression2
   21           | expression . lex_GE expression2
   22           | expression . lex_EQ expression2
   23           | expression . lex_NE expression2

    lex_EQ      shift, and go to state 24
    lex_NE      shift, and go to state 25
    lex_LT      shift, and go to state 26
    lex_GT      shift, and go to state 27
    lex_LE      shift, and go to state 28
    lex_GE      shift, and go to state 29
    lex_RPAREN  shift, and go to state 30


state 17

   24 exp_function: lex_ID lex_LPAREN . explist lex_RPAREN

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    $default  reduce using rule 25 (explist)

    exp_variable  go to state 8
    expression4   go to state 9
    expression3   go to state 10
    expression2   go to state 11
    expression    go to state 31
    exp_function  go to state 13
    explist       go to state 32


state 18

    0 $accept: program $end .

    $default  accept


state 19

    9 expression3: expression3 lex_STAR . expression4

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    exp_variable  go to state 8
    expression4   go to state 33
    exp_function  go to state 13


state 20

   10 expression3: expression3 lex_SLASH . expression4

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    exp_variable  go to state 8
    expression4   go to state 34
    exp_function  go to state 13


state 21

   11 expression3: expression3 lex_PERCENT . expression4

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    exp_variable  go to state 8
    expression4   go to state 35
    exp_function  go to state 13


state 22

   15 expression2: expression2 lex_PLUS . expression3

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    exp_variable  go to state 8
    expression4   go to state 9
    expression3   go to state 36
    exp_function  go to state 13


state 23

   16 expression2: expression2 lex_MINUS . expression3

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    exp_variable  go to state 8
    expression4   go to state 9
    expression3   go to state 37
    exp_function  go to state 13


state 24

   22 expression: expression lex_EQ . expression2

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    exp_variable  go to state 8
    expression4   go to state 9
    expression3   go to state 10
    expression2   go to state 38
    exp_function  go to state 13


state 25

   23 expression: expression lex_NE . expression2

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    exp_variable  go to state 8
    expression4   go to state 9
    expression3   go to state 10
    expression2   go to state 39
    exp_function  go to state 13


state 26

   18 expression: expression lex_LT . expression2

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    exp_variable  go to state 8
    expression4   go to state 9
    expression3   go to state 10
    expression2   go to state 40
    exp_function  go to state 13


state 27

   19 expression: expression lex_GT . expression2

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    exp_variable  go to state 8
    expression4   go to state 9
    expression3   go to state 10
    expression2   go to state 41
    exp_function  go to state 13


state 28

   20 expression: expression lex_LE . expression2

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    exp_variable  go to state 8
    expression4   go to state 9
    expression3   go to state 10
    expression2   go to state 42
    exp_function  go to state 13


state 29

   21 expression: expression lex_GE . expression2

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    exp_variable  go to state 8
    expression4   go to state 9
    expression3   go to state 10
    expression2   go to state 43
    exp_function  go to state 13


state 30

    6 expression4: lex_LPAREN expression lex_RPAREN .

    $default  reduce using rule 6 (expression4)


state 31

   18 expression: expression . lex_LT expression2
   19           | expression . lex_GT expression2
   20           | expression . lex_LE expression2
   21           | expression . lex_GE expression2
   22           | expression . lex_EQ expression2
   23           | expression . lex_NE expression2
   26 explist: expression .

    lex_EQ  shift, and go to state 24
    lex_NE  shift, and go to state 25
    lex_LT  shift, and go to state 26
    lex_GT  shift, and go to state 27
    lex_LE  shift, and go to state 28
    lex_GE  shift, and go to state 29

    $default  reduce using rule 26 (explist)


state 32

   24 exp_function: lex_ID lex_LPAREN explist . lex_RPAREN
   27 explist: explist . lex_COMMA expression

    lex_COMMA   shift, and go to state 44
    lex_RPAREN  shift, and go to state 45


state 33

    9 expression3: expression3 lex_STAR expression4 .

    $default  reduce using rule 9 (expression3)


state 34

   10 expression3: expression3 lex_SLASH expression4 .

    $default  reduce using rule 10 (expression3)


state 35

   11 expression3: expression3 lex_PERCENT expression4 .

    $default  reduce using rule 11 (expression3)


state 36

    9 expression3: expression3 . lex_STAR expression4
   10            | expression3 . lex_SLASH expression4
   11            | expression3 . lex_PERCENT expression4
   15 expression2: expression2 lex_PLUS expression3 .

    lex_STAR     shift, and go to state 19
    lex_SLASH    shift, and go to state 20
    lex_PERCENT  shift, and go to state 21

    $default  reduce using rule 15 (expression2)


state 37

    9 expression3: expression3 . lex_STAR expression4
   10            | expression3 . lex_SLASH expression4
   11            | expression3 . lex_PERCENT expression4
   16 expression2: expression2 lex_MINUS expression3 .

    lex_STAR     shift, and go to state 19
    lex_SLASH    shift, and go to state 20
    lex_PERCENT  shift, and go to state 21

    $default  reduce using rule 16 (expression2)


state 38

   15 expression2: expression2 . lex_PLUS expression3
   16            | expression2 . lex_MINUS expression3
   22 expression: expression lex_EQ expression2 .

    lex_PLUS   shift, and go to state 22
    lex_MINUS  shift, and go to state 23

    $default  reduce using rule 22 (expression)


state 39

   15 expression2: expression2 . lex_PLUS expression3
   16            | expression2 . lex_MINUS expression3
   23 expression: expression lex_NE expression2 .

    lex_PLUS   shift, and go to state 22
    lex_MINUS  shift, and go to state 23

    $default  reduce using rule 23 (expression)


state 40

   15 expression2: expression2 . lex_PLUS expression3
   16            | expression2 . lex_MINUS expression3
   18 expression: expression lex_LT expression2 .

    lex_PLUS   shift, and go to state 22
    lex_MINUS  shift, and go to state 23

    $default  reduce using rule 18 (expression)


state 41

   15 expression2: expression2 . lex_PLUS expression3
   16            | expression2 . lex_MINUS expression3
   19 expression: expression lex_GT expression2 .

    lex_PLUS   shift, and go to state 22
    lex_MINUS  shift, and go to state 23

    $default  reduce using rule 19 (expression)


state 42

   15 expression2: expression2 . lex_PLUS expression3
   16            | expression2 . lex_MINUS expression3
   20 expression: expression lex_LE expression2 .

    lex_PLUS   shift, and go to state 22
    lex_MINUS  shift, and go to state 23

    $default  reduce using rule 20 (expression)


state 43

   15 expression2: expression2 . lex_PLUS expression3
   16            | expression2 . lex_MINUS expression3
   21 expression: expression lex_GE expression2 .

    lex_PLUS   shift, and go to state 22
    lex_MINUS  shift, and go to state 23

    $default  reduce using rule 21 (expression)


state 44

   27 explist: explist lex_COMMA . expression

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    exp_variable  go to state 8
    expression4   go to state 9
    expression3   go to state 10
    expression2   go to state 11
    expression    go to state 46
    exp_function  go to state 13


state 45

   24 exp_function: lex_ID lex_LPAREN explist lex_RPAREN .

    $default  reduce using rule 24 (exp_function)


state 46

   18 expression: expression . lex_LT expression2
   19           | expression . lex_GT expression2
   20           | expression . lex_LE expression2
   21           | expression . lex_GE expression2
   22           | expression . lex_EQ expression2
   23           | expression . lex_NE expression2
   27 explist: explist lex_COMMA expression .

    lex_EQ  shift, and go to state 24
    lex_NE  shift, and go to state 25
    lex_LT  shift, and go to state 26
    lex_GT  shift, and go to state 27
    lex_LE  shift, and go to state 28
    lex_GE  shift, and go to state 29

    $default  reduce using rule 27 (explist)
